CHIP CPU {

    IN  inM[16],      // M value input  (M = contents of RAM[A])
        instruction[16], // Instruction for execution
        reset;           // Signals whether to re-start the current
                         // program (reset=1) or continue executing
                         // the current program (reset=0).

    OUT outM[16],        // M value output
        writeM,          // Write into M? 
        addressM[15],    // Address in data memory (of M)
        pc[15];          // address of next instruction


PARTS:
// Not
Nand(in=instruction[15],out=noti);

// Mux16
Nand(a=noti,b=noti,out=Nnoti);
//............................................................................
//*Mux0
Nand(a=Nnoti,b=outM[0],out=o1a0);
Nand(a=o1a0,b=o1a0,out=o10);

Nand(a=noti,b=instruction[0],out=o2a0);
Nand(a=o2a0,b=o2a0,out=o20);

Nand(a=o10,b=o10,out=o1n0);
Nand(a=o20,b=o20,out=o2n0);
Nand(a=o1n0,b=o2n0,out=i[0]);
//............................................................................
//*Mux1
Nand(a=Nnoti,b=outM[1],out=o1a1);
Nand(a=o1a1,b=o1a1,out=o11);

Nand(a=noti,b=instruction[1],out=o2a1);
Nand(a=o2a1,b=o2a1,out=o21);

Nand(a=o11,b=o11,out=o1n1);
Nand(a=o21,b=o21,out=o2n1);
Nand(a=o1n1,b=o2n1,out=i[1]);
//............................................................................
//*Mux2
Nand(a=Nnoti,b=outM[2],out=o1a2);
Nand(a=o1a2,b=o1a2,out=o12);

Nand(a=noti,b=instruction[2],out=o2a2);
Nand(a=o2a2,b=o2a2,out=o22);

Nand(a=o12,b=o12,out=o1n2);
Nand(a=o22,b=o22,out=o2n2);
Nand(a=o1n2,b=o2n2,out=i[2]);
//............................................................................
//*Mux3
Nand(a=Nnoti,b=outM[3],out=o1a3);
Nand(a=o1a3,b=o1a3,out=o13);

Nand(a=noti,b=instruction[3],out=o2a3);
Nand(a=o2a3,b=o2a3,out=o23);

Nand(a=o13,b=o13,out=o1n3);
Nand(a=o23,b=o23,out=o2n3);
Nand(a=o1n3,b=o2n3,out=i[3]);
//............................................................................
//*Mux4
Nand(a=Nnoti,b=outM[4],out=o1a4);
Nand(a=o1a4,b=o1a4,out=o14);

Nand(a=noti,b=instruction[4],out=o2a4);
Nand(a=o2a4,b=o2a4,out=o24);

Nand(a=o14,b=o14,out=o1n4);
Nand(a=o24,b=o24,out=o2n4);
Nand(a=o1n4,b=o2n4,out=i[4]);
//............................................................................
//*Mux5
Nand(a=Nnoti,b=outM[5],out=o1a5);
Nand(a=o1a5,b=o1a5,out=o15);

Nand(a=noti,b=instruction[5],out=o2a5);
Nand(a=o2a5,b=o2a5,out=o25);

Nand(a=o15,b=o15,out=o1n5);
Nand(a=o25,b=o25,out=o2n5);
Nand(a=o1n5,b=o2n5,out=i[5]);
//............................................................................
//*Mux6
Nand(a=Nnoti,b=outM[6],out=o1a6);
Nand(a=o1a6,b=o1a6,out=o16);

Nand(a=noti,b=instruction[6],out=o2a6);
Nand(a=o2a6,b=o2a6,out=o26);

Nand(a=o16,b=o16,out=o1n6);
Nand(a=o26,b=o26,out=o2n6);
Nand(a=o1n6,b=o2n6,out=i[6]);
//............................................................................
//*Mux7
Nand(a=Nnoti,b=outM[7],out=o1a7);
Nand(a=o1a7,b=o1a7,out=o17);

Nand(a=noti,b=instruction[7],out=o2a7);
Nand(a=o2a7,b=o2a7,out=o27);

Nand(a=o17,b=o17,out=o1n7);
Nand(a=o27,b=o27,out=o2n7);
Nand(a=o1n7,b=o2n7,out=i[7]);
//............................................................................
//*Mux8
Nand(a=Nnoti,b=outM[8],out=o1a8);
Nand(a=o1a8,b=o1a8,out=o18);

Nand(a=noti,b=instruction[8],out=o2a8);
Nand(a=o2a8,b=o2a8,out=o28);

Nand(a=o18,b=o18,out=o1n8);
Nand(a=o28,b=o28,out=o2n8);
Nand(a=o1n8,b=o2n8,out=i[8]);
//............................................................................
//*Mux9
Nand(a=Nnoti,b=outM[9],out=o1a9);
Nand(a=o1a9,b=o1a9,out=o19);

Nand(a=noti,b=instruction[9],out=o2a9);
Nand(a=o2a9,b=o2a9,out=o29);

Nand(a=o19,b=o19,out=o1n9);
Nand(a=o29,b=o29,out=o2n9);
Nand(a=o1n9,b=o2n9,out=i[9]);
//............................................................................
//*Mux10
Nand(a=Nnoti,b=outM[10],out=o1a10);
Nand(a=o1a10,b=o1a10,out=o110);

Nand(a=noti,b=instruction[10],out=o2a10);
Nand(a=o2a10,b=o2a10,out=o210);

Nand(a=o110,b=o110,out=o1n10);
Nand(a=o210,b=o210,out=o2n10);
Nand(a=o1n10,b=o2n10,out=i[10]);
//............................................................................
//*Mux11
Nand(a=Nnoti,b=outM[11],out=o1a11);
Nand(a=o1a11,b=o1a11,out=o111);

Nand(a=noti,b=instruction[11],out=o2a11);
Nand(a=o2a11,b=o2a11,out=o211);

Nand(a=o111,b=o111,out=o1n11);
Nand(a=o211,b=o211,out=o2n11);
Nand(a=o1n11,b=o2n11,out=i[11]);
//............................................................................
//*Mux12
Nand(a=Nnoti,b=outM[12],out=o1a12);
Nand(a=o1a12,b=o1a12,out=o112);

Nand(a=noti,b=instruction[12],out=o2a12);
Nand(a=o2a12,b=o2a12,out=o212);

Nand(a=o112,b=o112,out=o1n12);
Nand(a=o212,b=o212,out=o2n12);
Nand(a=o1n12,b=o2n12,out=i[12]);
//............................................................................
//*Mux13
Nand(a=Nnoti,b=outM[13],out=o1a13);
Nand(a=o1a13,b=o1a13,out=o113);

Nand(a=noti,b=instruction[13],out=o2a13);
Nand(a=o2a13,b=o2a13,out=o213);

Nand(a=o113,b=o113,out=o1n13);
Nand(a=o213,b=o213,out=o2n13);
Nand(a=o1n13,b=o2n13,out=i[13]);
//............................................................................
//*Mux14
Nand(a=Nnoti,b=outM[14],out=o1a14);
Nand(a=o1a14,b=o1a14,out=o114);

Nand(a=noti,b=instruction[14],out=o2a14);
Nand(a=o2a14,b=o2a14,out=o214);

Nand(a=o114,b=o114,out=o1n14);
Nand(a=o214,b=o214,out=o2n14);
Nand(a=o1n14,b=o2n14,out=i[14]);
//............................................................................
//*Mux15
Nand(a=Nnoti,b=outM[15],out=o1a15);
Nand(a=o1a15,b=o1a15,out=o115);

Nand(a=noti,b=instruction[15],out=o2a15);
Nand(a=o2a15,b=o2a15,out=o215);

Nand(a=o115,b=o115,out=o1n15);
Nand(a=o215,b=o215,out=o2n15);
Nand(a=o1n15,b=o2n15,out=i[15]);
//............................................................................

// Or
Nand(a=noti,b=noti,out=1noti);
Nand(a=instruction[5],b=instruction[5],out=1ins5);
Nand(a=1noti,b=1ins5,out=loadA);
//............................................................................


// ARegister 
// in = i, sel=loadA
// ARegister(in=i,load=intoA,out=A,out[0..14]=addressM);

Nand(a=loadA,b=loadA,out=nloadA);

// *Bit 0
Nand(a=aeo[0],b=nloadA,out=p1a0);
Nand(a=p1a0,b=p1a0,out=p10);

Nand(a=i[0],b=loadA,out=p2a0);
Nand(a=p2a0,b=p2a0,out=p20);

Nand(a=p10,b=p10,out=p1n0);
Nand(a=p20,b=p20,out=p2n0);
Nand(a=p1n0,b=p2n0,out=i[0]);

DFF(in=i[0],out=A[0],out=aeo[0]);
//............................................................................
// *Bit 1
Nand(a=aeo[1],b=nloadA,out=p1a1);
Nand(a=p1a1,b=p1a1,out=p11);

Nand(a=i[1],b=loadA,out=p2a1);
Nand(a=p2a1,b=p2a1,out=p21);

Nand(a=p11,b=p11,out=p1n1);
Nand(a=p21,b=p21,out=p2n1);
Nand(a=p1n1,b=p2n1,out=i[1]);

DFF(in=i[1],out=A[1],out=aeo[1]);
//............................................................................
// *Bit 2
Nand(a=aeo[2],b=nloadA,out=p1a2);
Nand(a=p1a2,b=p1a2,out=p12);

Nand(a=i[2],b=loadA,out=p2a2);
Nand(a=p2a2,b=p2a2,out=p22);

Nand(a=p12,b=p12,out=p1n2);
Nand(a=p22,b=p22,out=p2n2);
Nand(a=p1n2,b=p2n2,out=i[2]);

DFF(in=i[2],out=A[2],out=aeo[2]);
//............................................................................
// *Bit 3
Nand(a=aeo[3],b=nloadA,out=p1a3);
Nand(a=p1a3,b=p1a3,out=p13);

Nand(a=i[3],b=loadA,out=p2a3);
Nand(a=p2a3,b=p2a3,out=p23);

Nand(a=p13,b=p13,out=p1n3);
Nand(a=p23,b=p23,out=p2n3);
Nand(a=p1n3,b=p2n3,out=i[3]);

DFF(in=i[3],out=A[3],out=aeo[3]);
//............................................................................
// *Bit 4
Nand(a=aeo[4],b=nloadA,out=p1a4);
Nand(a=p1a4,b=p1a4,out=p14);

Nand(a=i[4],b=loadA,out=p2a4);
Nand(a=p2a4,b=p2a4,out=p24);

Nand(a=p14,b=p14,out=p1n4);
Nand(a=p24,b=p24,out=p2n4);
Nand(a=p1n4,b=p2n4,out=i[4]);

DFF(in=i[4],out=A[4],out=aeo[4]);
//............................................................................
// *Bit 5
Nand(a=aeo[5],b=nloadA,out=p1a5);
Nand(a=p1a5,b=p1a5,out=p15);

Nand(a=i[5],b=loadA,out=p2a5);
Nand(a=p2a5,b=p2a5,out=p25);

Nand(a=p15,b=p15,out=p1n5);
Nand(a=p25,b=p25,out=p2n5);
Nand(a=p1n5,b=p2n5,out=i[5]);

DFF(in=i[5],out=A[5],out=aeo[5]);
//............................................................................
// *Bit 6
Nand(a=aeo[6],b=nloadA,out=p1a6);
Nand(a=p1a6,b=p1a6,out=p16);

Nand(a=i[6],b=loadA,out=p2a6);
Nand(a=p2a6,b=p2a6,out=p26);

Nand(a=p16,b=p16,out=p1n6);
Nand(a=p26,b=p26,out=p2n6);
Nand(a=p1n6,b=p2n6,out=i[6]);

DFF(in=i[6],out=A[6],out=aeo[6]);
//............................................................................
// *Bit 7
Nand(a=aeo[7],b=nloadA,out=p1a7);
Nand(a=p1a7,b=p1a7,out=p17);

Nand(a=i[7],b=loadA,out=p2a7);
Nand(a=p2a7,b=p2a7,out=p27);

Nand(a=p17,b=p17,out=p1n7);
Nand(a=p27,b=p27,out=p2n7);
Nand(a=p1n7,b=p2n7,out=i[7]);

DFF(in=i[7],out=A[7],out=aeo[7]);
//............................................................................
// *Bit 8
Nand(a=aeo[8],b=nloadA,out=p1a8);
Nand(a=p1a8,b=p1a8,out=p18);

Nand(a=i[8],b=loadA,out=p2a8);
Nand(a=p2a8,b=p2a8,out=p28);

Nand(a=p18,b=p18,out=p1n8);
Nand(a=p28,b=p28,out=p2n8);
Nand(a=p1n8,b=p2n8,out=i[8]);

DFF(in=i[8],out=A[8],out=aeo[8]);
//............................................................................
// *Bit 9
Nand(a=aeo[9],b=nloadA,out=p1a9);
Nand(a=p1a9,b=p1a9,out=p19);

Nand(a=i[9],b=loadA,out=p2a9);
Nand(a=p2a9,b=p2a9,out=p29);

Nand(a=p19,b=p19,out=p1n9);
Nand(a=p29,b=p29,out=p2n9);
Nand(a=p1n9,b=p2n9,out=i[9]);

DFF(in=i[9],out=A[9],out=aeo[9]);
//............................................................................
// *Bit 10
Nand(a=aeo[10],b=nloadA,out=p1a10);
Nand(a=p1a10,b=p1a10,out=p110);

Nand(a=i[10],b=loadA,out=p2a10);
Nand(a=p2a10,b=p2a10,out=p210);

Nand(a=p110,b=p110,out=p1n10);
Nand(a=p210,b=p210,out=p2n10);
Nand(a=p1n10,b=p2n10,out=i[10]);

DFF(in=i[10],out=A[10],out=aeo[10]);
//............................................................................
// *Bit 11
Nand(a=aeo[11],b=nloadA,out=p1a11);
Nand(a=p1a11,b=p1a11,out=p111);

Nand(a=i[11],b=loadA,out=p2a11);
Nand(a=p2a11,b=p2a11,out=p211);

Nand(a=p111,b=p111,out=p1n11);
Nand(a=p211,b=p211,out=p2n11);
Nand(a=p1n11,b=p2n11,out=i[11]);

DFF(in=i[11],out=A[11],out=aeo[11]);
//............................................................................
// *Bit 12
Nand(a=aeo[12],b=nloadA,out=p1a12);
Nand(a=p1a12,b=p1a12,out=p112);

Nand(a=i[12],b=loadA,out=p2a12);
Nand(a=p2a12,b=p2a12,out=p212);

Nand(a=p112,b=p112,out=p1n12);
Nand(a=p212,b=p212,out=p2n12);
Nand(a=p1n12,b=p2n12,out=i[12]);

DFF(in=i[12],out=A[12],out=aeo[12]);
//............................................................................
// *Bit 13
Nand(a=aeo[13],b=nloadA,out=p1a13);
Nand(a=p1a13,b=p1a13,out=p113);

Nand(a=i[13],b=loadA,out=p2a13);
Nand(a=p2a13,b=p2a13,out=p213);

Nand(a=p113,b=p113,out=p1n13);
Nand(a=p213,b=p213,out=p2n13);
Nand(a=p1n13,b=p2n13,out=i[13]);

DFF(in=i[13],out=A[13],out=aeo[13]);
//............................................................................
// *Bit 14
Nand(a=aeo[14],b=nloadA,out=p1a14);
Nand(a=p1a14,b=p1a14,out=p114);

Nand(a=i[14],b=loadA,out=p2a14);
Nand(a=p2a14,b=p2a14,out=p214);

Nand(a=p114,b=p114,out=p1n14);
Nand(a=p214,b=p214,out=p2n14);
Nand(a=p1n14,b=p2n14,out=i[14]);

DFF(in=i[14],out=A[14],out=aeo[14]);
//............................................................................
// *Bit 15
Nand(a=aeo[15],b=nloadA,out=p1a15);
Nand(a=p1a15,b=p1a15,out=p115);

Nand(a=i[15],b=loadA,out=p2a15);
Nand(a=p2a15,b=p2a15,out=p215);

Nand(a=p115,b=p115,out=p1n15);
Nand(a=p215,b=p215,out=p2n15);
Nand(a=p1n15,b=p2n15,out=i[15]);

DFF(in=i[15],out=A[15],out=aeo[15]);
//............................................................................

// And
Nand(a=instruction[15],b=instruction[12],out=MorA1);
Nand(a=MorA1,b=MorA1,out=MorA);

// Mux16
Nand(a=MorA,b=MorA,out=nMorA);
//............................................................................
//*Mux0
Nand(a=Nnoti,b=outM[0],out=o1a0);
Nand(a=o1a0,b=o1a0,out=o10);

Nand(a=noti,b=instruction[0],out=o2a0);
Nand(a=o2a0,b=o2a0,out=o20);

Nand(a=o10,b=o10,out=o1n0);
Nand(a=o20,b=o20,out=o2n0);
Nand(a=o1n0,b=o2n0,out=i[0]);
